package Demo

import ItemObjEditing
import ChannelAbilityPreset
import Assets
import RecipeSystem
import ObjectIds
import RegisterEvents

public constant ITEM_ID_WOOD = compiletime(ITEM_ID_GEN.next())
public constant ITEM_ID_STICK = compiletime(ITEM_ID_GEN.next())
public constant ITEM_ID_STONE = compiletime(ITEM_ID_GEN.next())
public constant ITEM_ID_AXE = compiletime(ITEM_ID_GEN.next())
public constant ITEM_ID_SHIELD = compiletime(ITEM_ID_GEN.next())

public constant RECIPE_ID_STICK = compiletime(RECIPE_ID_GEN.next())
public constant RECIPE_ID_AXE = compiletime(RECIPE_ID_GEN.next())
public constant RECIPE_ID_SHIELD = compiletime(RECIPE_ID_GEN.next())

public constant ABILITY_ID_CRAFT = compiletime(ABIL_ID_GEN.next())

public constant HERO_ID_CRAFTER = compiletime(HERO_ID_GEN.next())

init
    let regionSize = 500
    let centerPos = GetEntireMapRect().getCenter()
    let centerOfMap = Rect(centerPos.x - regionSize, centerPos.y - regionSize, centerPos.x + regionSize, centerPos.y + regionSize)
    for i = 0 to 20
        createItem(ITEM_ID_WOOD, centerOfMap.randomPoint())
        createItem(ITEM_ID_STONE, centerOfMap.randomPoint())
    registerSpellEffectEvent(ABILITY_ID_CRAFT) ->
        GetTriggerUnit().recipeCraftAny()
    for i = 0 to bj_MAX_PLAYERS
        if players[i].isIngame()
            let pos = centerOfMap.randomPoint()
            createUnit(players[i], HERO_ID_CRAFTER, pos, bj_UNIT_FACING.asAngleDegrees())
            CreateFogModifierRectSimple(players[i], FOG_OF_WAR_VISIBLE, GetEntireMapRect(), true)

@compiletime
function genDefs()
    new ItemDefinition(ITEM_ID_WOOD, 'ches')
        ..setName("Wood")
        ..setTooltipBasic("Wood")
        ..setDescription("It's a log.")
        ..setTooltipExtended("It's a log.")
        ..setInterfaceIcon(Icons.bTNEatTree)
        ..setNumberofCharges(1)
        ..setAbilities("")
        ..setGoldCost(0)
        ..setModelUsed(Doodads.felwoodLogStraight)
        ..setScalingValue(0.33)
    new ItemDefinition(ITEM_ID_STICK, 'ches')
        ..setName("Stick")
        ..setTooltipBasic("Stick")
        ..setDescription("A smallish log, useful for poking things with.")
        ..setTooltipExtended("A smallish log, useful for poking things with.")
        ..setInterfaceIcon(Icons.bTNAlleriaFlute)
        ..setNumberofCharges(1)
        ..setGoldCost(0)
    new ItemDefinition(ITEM_ID_STONE, 'ches')
        ..setName("Stone")
        ..setTooltipBasic("Stone")
        ..setDescription("A large rock.")
        ..setTooltipExtended("A large rock.")
        ..setInterfaceIcon(Icons.bTNGolemThunderClap)
        ..setNumberofCharges(1)
        ..setGoldCost(0)
        ..setModelUsed("Doodads\\LordaeronSummer\\Rocks\\Lords_Rock\\Lords_Rock2.mdl")
        ..setScalingValue(0.7)
    new ItemDefinition(ITEM_ID_AXE, 'ches')
        ..setName("Stone Axe")
        ..setTooltipBasic("Stone Axe")
        ..setDescription("A simple axe made from stone.\n|cffaaaaaa+10 Damage")
        ..setTooltipExtended("A simple axe made from stone.\n|cffaaaaaa+10 Damage")
        ..setInterfaceIcon(Icons.bTNOrcMeleeUpOne)
        ..setNumberofCharges(0)
        ..setGoldCost(4)
        ..setAbilities("AItn")
    new ItemDefinition(ITEM_ID_SHIELD, 'ches')
        ..setName("Wooden Shield")
        ..setTooltipBasic("Wooden Shield")
        ..setDescription("A basic round wooden shield.\n|cffaaaaaa+5 Armor")
        ..setTooltipExtended("A basic round wooden shield.\n|cffaaaaaa+5 Armor")
        ..setInterfaceIcon(Icons.bTNSteelArmor)
        ..setNumberofCharges(0)
        ..setGoldCost(4)
        ..setAbilities("AId5")
    new ChannelAbilityPreset(ABILITY_ID_CRAFT, 1, true)
        ..makeUnitSpell(0, 5)
        ..setIconNormal(Icons.bTNHammer)
        ..setTooltipNormal(1, "Craft Items")
        ..setTooltipNormalExtended(1, "Attempt to craft items. \n\n|cffffcc00Recipes:|r\nAxe: 2 sticks, 2 stone\nShield: 4 wood\n\n|cff999999Hint: Sticks are made with wood in slots 1 and 3.")
        ..presetTargetTypes(Targettype.NONE)
        ..presetButtonPosNormal(1, 1)
        // ..presetOption(opt, flag)
    new HeroDefinition(HERO_ID_CRAFTER, 'Hpal')
        ..setModelFile(Units.peasant1)
        ..setIconGameInterface(Icons.bTNPeasant)
        ..setNormalAbilities("AInv," + ABILITY_ID_CRAFT.toRawCode())
        ..setHeroAbilities("")
    
    